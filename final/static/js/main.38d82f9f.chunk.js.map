{"version":3,"sources":["services/conf.ts","services/index.ts","Components/ChatRoom/Room.tsx","Components/ChatRoom/SearchField.tsx","Components/ChatRoom/Rooms.tsx","ChatInput.tsx","Components/ChatRoom/IncomingChatMessage.tsx","Components/ChatRoom/OutgoingChatMessage.tsx","RoomHistory.tsx","Components/CurrentChatConversation/CurrentConversation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","Axios","create","createMessage","data","post","error","Error","getMessages","roomId","get","Room","name","id","image","setCurrentRoom","created_at","onClick","style","cursor","className","SearchField","setSearch","search","onChange","e","target","value","type","placeholder","aria-hidden","Rooms","setCurrentRoomId","useState","rooms","setRooms","filteredRooms","setFilteredRooms","useEffect","getRooms","then","response","result","filter","room","includes","toLowerCase","RenderRooms","map","key","ChatInput","setMessage","input","setInput","height","src","alt","IncomingChatMessage","OutgoingChatMessage","RoomHistory","messages","ip_address","console","log","RenderMesages","message","ip","require","CurrentRoomConversation","setMessages","address","handleMessages","a","handleCreateMessage","App","currentRoomId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38d82f9f.chunk.js","sourcesContent":["import Axios from \"axios\";\r\n\r\nconst axios = Axios.create({\r\n  // baseURL: \"http://localhost:3000/api\"\r\n});\r\n\r\nexport default axios;","import axios from './conf'\r\n\r\nexport * from './conf'\r\nexport interface Message {\r\n    ip_address:string;\r\n    input:string\r\n    created_at: Date|null\r\n    id:number\r\n}\r\nexport interface Room {\r\n    id: number\r\n    name: string\r\n    image: string,\r\n    created_at: Date | null\r\n}\r\nexport const createMessage = (data:{ip_address:string, input:string,room:number}) =>{\r\n    try {\r\n        return axios.post<Message>('api/chats',\r\n        data\r\n        )\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}\r\nexport const getMessages = (roomId:number) =>{\r\n    try {\r\n        return axios.get<Message[]>(`api/chats/${roomId}`)\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}\r\n// export const getMessage = (chatId:number) =>{\r\n//     try {\r\n//         return axios.post<Message>(`/chats/${roomId}`)\r\n//     } catch (error) {\r\n//         throw new Error(error)\r\n//     }\r\n// }\r\nexport const getRooms = () =>{ \r\n    try {\r\n        return axios.get<Room[]>(`api/rooms/`)\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}\r\nexport const getRoom = (id:number) =>{ \r\n    try {\r\n        return axios.get<Room>(`api/rooms/${id}`)\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}","export const Room = ({ name, image, id, created_at, setCurrentRoom }) => {\r\n    return (\r\n        <div onClick={()=>setCurrentRoom(id)}  style={{cursor:'pointer'}}className=\"chat_list active_chat\">\r\n            <div id='conversation' className=\"chat_people \">\r\n                {/* <div className=\"chat_img\"> <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" /> </div> */}\r\n                <div className=\"chat_ib\">\r\n                    <h5>{name}<span className=\"chat_date\">Dec 25</span></h5>\r\n                    <p >Test, which is a new approach to have all solutions\r\n                        astrology under one roof.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const SearchField = ({setSearch,search}) => {\r\n    return (\r\n        <div className=\"srch_bar\">\r\n            <div className=\"stylish-input-group\">\r\n                <input onChange={(e)=>setSearch(e.target.value)} value={search} id=\"search\" type=\"text\" className=\"search-bar\" placeholder=\"Search\" />\r\n                <span className=\"input-group-addon\">\r\n                    <button type=\"button\"> <i className=\"fa fa-search\" aria-hidden=\"true\"></i> </button>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { Room as IRoom,getRooms } from \"../../services/index\"\r\nimport { Room } from \"./Room\"\r\nimport { SearchField } from \"./SearchField\"\r\n\r\n\r\nexport const Rooms = ({setCurrentRoomId}) => {\r\n    const [rooms, setRooms] = useState([]as IRoom[])\r\n    const [filteredRooms, setFilteredRooms] = useState([]as IRoom[])\r\n    const [search, setSearch] = useState('')\r\n    useEffect(() => {\r\n       getRooms().then(response =>{\r\n           const rooms =  response.data\r\n           setRooms(rooms)\r\n           setFilteredRooms(filteredRooms)\r\n       }) \r\n    }, [])\r\n    useEffect(() =>{\r\n        // console.log(search);\r\n        \r\n            const result = rooms.filter((room)=>room.name.includes(search.toLowerCase()))\r\n            // console.log('result',result);\r\n            setFilteredRooms(result)\r\n      \r\n\r\n    },[search,rooms])\r\n    const RenderRooms = () => {\r\n        // console.log('rooms',filteredRooms);\r\n        \r\n        return (\r\n            <>\r\n            {filteredRooms.map(room =>{\r\n                return <Room setCurrentRoom={setCurrentRoomId} {...room} key={room.id}/>    \r\n            })}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"inbox_people\">\r\n            <div className=\"headind_srch\">\r\n                <div className=\"recent_heading\">\r\n                    <h4>Recent</h4>\r\n                </div>\r\n                <SearchField setSearch={setSearch} search={search} />\r\n\r\n            </div>\r\n\r\n            <div id='inbox' className=\"inbox_chat\">\r\n                <RenderRooms/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const ChatInput = ({setMessage}) => {\r\nconst [input, setInput] = useState('')\r\n    return (\r\n        <div className=\"type_msg\">\r\n            <div className=\"form-row mt-3 \">\r\n                <div className=\"form-group  col-md-10\">\r\n                    <input value={input} onChange={(e)=>setInput(e.target.value)} id=\"send_message\" type=\"text\" className=\"write_msg form-control\" placeholder=\"Type a message\" />\r\n                  \r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"custom-file-upload\">\r\n                        <input type=\"file\" />\r\n                        <img style={{height:'25px', cursor: 'pointer'}} src=\"/assets/svg/file.svg\" alt=\"\"></img>\r\n                    </label>\r\n\r\n                    <img id='send' style={{height:'25px', cursor: 'pointer'}} src=\"/assets/svg/send.svg\" alt=\"\" onClick={(e)=>{\r\n                        setMessage(input)\r\n                        setInput('')\r\n                        }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const IncomingChatMessage = ({input}) => {\r\n  return (\r\n\r\n    <div className=\"incoming_msg\">\r\n      <div className=\"received_msg\">\r\n        <div className=\"received_withd_msg\">\r\n          <p>{input}</p>\r\n          <span className=\"time_date\"> 11:01 AM | June 9</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}","export const OutgoingChatMessage = ({input})=>{\r\n    return (\r\n          <div className=\"outgoing_msg\">\r\n            <div className=\"sent_msg\">\r\n              <p className=\"bg-primary\">{input}</p>\r\n              <span className=\"time_date\"> 11:01 AM | June 9</span>\r\n            </div>\r\n          </div>\r\n    )\r\n}","import { IncomingChatMessage } from \"./Components/ChatRoom/IncomingChatMessage\"\r\nimport { OutgoingChatMessage } from \"./Components/ChatRoom/OutgoingChatMessage\"\r\n\r\n\r\nexport const RoomHistory = ({messages,ip_address}) => {\r\n    console.log(messages);\r\n    \r\n    const RenderMesages = ()=>{ \r\n        return (\r\n            <>\r\n            {messages.map((message)=>{\r\n                if(message.ip_address== ip_address){\r\n                    return  <OutgoingChatMessage input={message.input} key={message.id}  />\r\n                }else{\r\n                    return   <IncomingChatMessage input={message.input} key={message.id} />\r\n                   \r\n                }\r\n            })}\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <div id=\"msg_history\" className=\"msg_history\">\r\n           <RenderMesages/>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { ChatInput } from \"../../ChatInput\"\r\nimport { RoomHistory } from \"../../RoomHistory\"\r\nimport { Room as IRoom,getMessages,createMessage } from \"../../services/index\"\r\nconst ip = require('ip');\r\nexport const CurrentRoomConversation = ({roomId})=>{\r\n    const [messages, setMessages] = useState([])\r\n    const [message, setMessage] = useState(null)\r\n    const [ip_address, setIp_address] = useState(ip.address())\r\n    useEffect(() => {\r\n       handleMessages()\r\n    }, [roomId])\r\n\r\n    const handleMessages = async()=>{\r\n        try {\r\n           const response = await getMessages(roomId)\r\n            setMessages(response.data)\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (message) {\r\n           handleCreateMessage()\r\n\r\n        }\r\n    },[message])\r\n\r\n    const handleCreateMessage = async ()=>{\r\n        try {\r\n           const result =  await createMessage({ip_address:ip_address as string,input:message as string, room:roomId})\r\n            handleMessages()\r\n            // setMessages([...messages,result.])\r\n           setMessage(null)\r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div className=\"mesgs\">\r\n            <RoomHistory messages={messages} ip_address={ip_address} />\r\n            <ChatInput setMessage={setMessage}/>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\nimport { Rooms } from './Components/ChatRoom/Rooms';\nimport { CurrentRoomConversation } from './Components/CurrentChatConversation/CurrentConversation';\n\n\n\nfunction App() {\n\n  const [currentRoomId, setCurrentRoomId] = useState(1)\n  return (\n    <div className=\"App\">\n      <main className='container h-100'>\n        <h2 className='text-center'>Chat</h2>\n        <div className=\"messaging\">\n          <div className=\"inbox_msg\">\n            <Rooms setCurrentRoomId= {setCurrentRoomId}/>\n            <CurrentRoomConversation roomId={currentRoomId}/>\n          </div>\n\n\n\n\n        </div>\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}